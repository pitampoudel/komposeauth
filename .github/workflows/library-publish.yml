name: Publish Client Library

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Perform a dry run (no actual publishing)'
        required: false
        default: false
        type: boolean

env:
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}

jobs:
  validate:
    name: Validate and Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      is-snapshot: ${{ steps.version.outputs.is-snapshot }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Determine version
        id: version
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
            if [[ -z "$TAG" ]]; then
              echo "Error: No release tag found" >&2
              exit 1
            fi
          
            # Validate SemVer format (vMAJOR.MINOR.PATCH with optional pre-release and metadata)
            if [[ ! "$TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
              echo "Error: Invalid tag format '$TAG'" >&2
              echo "Expected: vMAJOR.MINOR.PATCH (e.g., v1.2.3, v1.0.0-beta.1)" >&2
              exit 1
            fi
          
            VERSION="${TAG#v}"
            IS_SNAPSHOT="false"
            echo "✓ Release version: $VERSION"
          else
            # Extract version from gradle.properties or build.gradle.kts
            VERSION=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{print $2}')
            if [[ -z "$VERSION" || "$VERSION" == "unspecified" ]]; then
              echo "Error: Could not determine version from Gradle" >&2
              exit 1
            fi
          
            # Ensure SNAPSHOT suffix for non-release builds
            if [[ ! "$VERSION" =~ -SNAPSHOT$ ]]; then
              VERSION="${VERSION}-SNAPSHOT"
            fi
            IS_SNAPSHOT="true"
            echo "✓ Snapshot version: $VERSION"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is-snapshot=$IS_SNAPSHOT" >> $GITHUB_OUTPUT

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Run tests
        run: ./gradlew clean :shared:check :client:check --no-daemon --stacktrace

      - name: Run publish check (dry-run)
        if: github.event_name != 'release'
        run: ./gradlew publishToMavenLocal --no-configuration-cache --stacktrace

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/reports/tests/**
            **/build/test-results/**
          retention-days: 7

  publish:
    name: Publish to Maven Central
    needs: validate
    runs-on: ${{ matrix.os }}
    if: |
      (github.event_name == 'release' || github.event_name == 'push') &&
      !inputs.dry-run
    
    strategy:
      matrix:
        # Use multiple OS for KMP targets that require native compilation
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Publish snapshot to Maven Central
        if: needs.validate.outputs.is-snapshot == 'true'
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --stacktrace
        env:
          ORG_GRADLE_PROJECT_version: ${{ needs.validate.outputs.version }}

      - name: Publish release to Maven Central
        if: needs.validate.outputs.is-snapshot == 'false'
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --stacktrace
        env:
          ORG_GRADLE_PROJECT_version: ${{ needs.validate.outputs.version }}

  publish-summary:
    name: Publication Summary
    needs: [validate, publish]
    runs-on: ubuntu-latest
    if: always() && needs.validate.result == 'success'
    
    steps:
      - name: Create release summary
        if: needs.validate.outputs.is-snapshot == 'false'
        run: |
          echo "## 🚀 Library Published to Maven Central" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Type:** Release" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Gradle dependency:" >> $GITHUB_STEP_SUMMARY
          echo '```kotlin' >> $GITHUB_STEP_SUMMARY
          echo "// build.gradle.kts" >> $GITHUB_STEP_SUMMARY
          echo "dependencies {" >> $GITHUB_STEP_SUMMARY
          echo "    implementation(\"${{ github.repository_owner }}:komposeauth-client:${{ needs.validate.outputs.version }}\")" >> $GITHUB_STEP_SUMMARY
          echo "}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Version catalog:" >> $GITHUB_STEP_SUMMARY
          echo '```toml' >> $GITHUB_STEP_SUMMARY
          echo "[versions]" >> $GITHUB_STEP_SUMMARY
          echo "komposeauth = \"${{ needs.validate.outputs.version }}\"" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[libraries]" >> $GITHUB_STEP_SUMMARY
          echo "komposeauth-client = { module = \"${{ github.repository_owner }}:komposeauth-client\", version.ref = \"komposeauth\" }" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⏳ **Note:** It may take up to 30 minutes for the release to appear in Maven Central." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔍 [View on Maven Central](https://central.sonatype.com/artifact/${{ github.repository_owner }}/komposeauth-client/${{ needs.validate.outputs.version }})" >> $GITHUB_STEP_SUMMARY

      - name: Create snapshot summary
        if: needs.validate.outputs.is-snapshot == 'true'
        run: |
          echo "## 📦 Snapshot Published to Maven Central" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Type:** Snapshot" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Gradle dependency:" >> $GITHUB_STEP_SUMMARY
          echo '```kotlin' >> $GITHUB_STEP_SUMMARY
          echo "// build.gradle.kts" >> $GITHUB_STEP_SUMMARY
          echo "repositories {" >> $GITHUB_STEP_SUMMARY
          echo "    maven(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")" >> $GITHUB_STEP_SUMMARY
          echo "}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "dependencies {" >> $GITHUB_STEP_SUMMARY
          echo "    implementation(\"${{ github.repository_owner }}:komposeauth-client:${{ needs.validate.outputs.version }}\")" >> $GITHUB_STEP_SUMMARY
          echo "}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Warning:** Snapshot versions are unstable and intended for testing only." >> $GITHUB_STEP_SUMMARY

      - name: Report failure
        if: needs.publish.result == 'failure'
        run: |
          echo "## ❌ Publication Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The library could not be published to Maven Central." >> $GITHUB_STEP_SUMMARY
          echo "Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Common issues:" >> $GITHUB_STEP_SUMMARY
          echo "- Invalid or expired Maven Central credentials" >> $GITHUB_STEP_SUMMARY
          echo "- GPG signing configuration errors" >> $GITHUB_STEP_SUMMARY
          echo "- Version already exists (for releases)" >> $GITHUB_STEP_SUMMARY
          echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY

  create-github-release-artifacts:
    name: Create GitHub Release Artifacts
    needs: [validate, publish]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && needs.publish.result == 'success'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build library artifacts
        run: ./gradlew :client:assemble --no-daemon

      - name: Generate release notes
        run: |
          cat > release-notes.md << 'EOF'
          # Installation
          
          Add the dependency to your `build.gradle.kts`:
          
          ```kotlin
          dependencies {
              implementation("${{ github.repository_owner }}:komposeauth-client:${{ needs.validate.outputs.version }}")
          }
          ```
          
          ## Maven Central
          This release is available on [Maven Central](https://central.sonatype.com/artifact/${{ github.repository_owner }}/komposeauth-client/${{ needs.validate.outputs.version }}).
          
          **Note:** It may take up to 30 minutes for the release to sync to Maven Central.
          
          ## Checksums
          See the attached files for artifact checksums.
          EOF

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            client/build/libs/*.jar
            release-notes.md
          body_path: release-notes.md
          fail_on_unmatched_files: false