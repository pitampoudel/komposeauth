name: Publish Docker Image

on:
  release:
    types: [published]
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: ./gradlew clean :shared:check :server:check --no-daemon

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine tags
        id: determine_tags
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
            VERSION="${TAG#v}"
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
          else
            BRANCH="${{ github.ref_name }}"
            SANITIZED_BRANCH=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9._-]/-/g')
            SHORT_SHA="${{ github.sha }}"
            SHORT_SHA="${SHORT_SHA:0:8}"
            echo "SNAPSHOT_TAG=${SANITIZED_BRANCH}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "BRANCH_TAG=${SANITIZED_BRANCH}" >> $GITHUB_OUTPUT
          fi

      - name: Validate SemVer tag (releases only)
        if: github.event_name == 'release'
        shell: bash
        run: |
          if [[ ! "${{ steps.determine_tags.outputs.TAG }}" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "Tag '${{ steps.determine_tags.outputs.TAG }}' is not a valid SemVer (expected vMAJOR.MINOR.PATCH optionally with pre-release)" >&2
            exit 1
          fi

      - name: Build and push Docker image (Release)
        if: github.event_name == 'release'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/komposeauth:latest
            ghcr.io/${{ github.repository_owner }}/komposeauth:${{ steps.determine_tags.outputs.VERSION }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/komposeauth:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/komposeauth:${{ steps.determine_tags.outputs.VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.determine_tags.outputs.VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image (Snapshot)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/komposeauth:${{ steps.determine_tags.outputs.SNAPSHOT_TAG }}
            ghcr.io/${{ github.repository_owner }}/komposeauth:${{ steps.determine_tags.outputs.BRANCH_TAG }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/komposeauth:${{ steps.determine_tags.outputs.SNAPSHOT_TAG }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/komposeauth:${{ steps.determine_tags.outputs.BRANCH_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.determine_tags.outputs.SNAPSHOT_TAG }}
            org.opencontainers.image.revision=${{ github.sha }}